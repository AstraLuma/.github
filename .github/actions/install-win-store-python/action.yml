name: Install Windows Store Python
description: Installs Python from the Windows Store

inputs:
  python-version:
    description: 'Python version to install'
    default: '3.11'  # should default to the latest Python
    required: false

runs:
  using: composite
  steps:

    - name: Python Constants
      id: python
      shell: powershell
      run: |
        # Constants for all Python versions
        echo "exe-dir=$(Join-Path -Path $env:LOCALAPPDATA -ChildPath \Microsoft\WindowsApps\)" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

        # Constants for each Python version
        if ( "${{ inputs.python-version }}" -eq "3.11" ) {
          echo "version=3.11" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "store-url=https://apps.microsoft.com/store/detail/python-311/9NRWMJP3717K" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "scripts-dir=$(Join-Path -Path $env:LOCALAPPDATA -ChildPath '\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\Scripts')" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
        }

    - name: Cache Python AppxBundle
      uses: actions/cache@v3.2.3
      with:
        path: python-${{ steps.python.outputs.version }}.appx
        key: python-${{ steps.python.outputs.version }}-appx-bundle

    - name: Install Windows Store Python ${{ steps.python.outputs.version }}
      shell: powershell
      run: |
        if (-not (Test-Path -Path python-${{ steps.python.outputs.version }}.appx -PathType Leaf)) {
          echo "Downloading Python ${{ steps.python.outputs.version }}..."
          $WebResponse = Invoke-WebRequest -UseBasicParsing -Method 'POST' -Uri 'https://store.rg-adguard.net/api/GetFiles' -Body "type=url&url=${{ steps.python.outputs.store-url }}&ring=Retail" -ContentType 'application/x-www-form-urlencoded'
          $DownloadURL = ($WebResponse.Links | where {$_ -like '*.msix*'} | where {$_ -like '*_neutral_*' -or $_ -like "*_"+$env:PROCESSOR_ARCHITECTURE.Replace("AMD","X").Replace("IA","X")+"_*"} | Select-String -Pattern '(?<=a href=").+(?=" r)').matches.value

          echo "Downloading from $DownloadURL"
          Invoke-WebRequest -Uri $DownloadURL -UseBasicParsing -OutFile python-${{ steps.python.outputs.version }}.appx
        }

        echo "Installing Python ${{ steps.python.outputs.version }}..."
        Add-AppxPackage -Path .\python-${{ steps.python.outputs.version }}.appx

        echo "Updating `$PATH..."
        echo "${{ steps.python.outputs.exe-dir }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "${{ steps.python.outputs.scripts-dir }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
